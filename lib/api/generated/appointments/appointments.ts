/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * WAIC API
 * WAIC API endpoints
 * OpenAPI spec version: v1
 */
import type {
  AvailabilitySlotDto,
  CreateAppointmentCommand,
  GetApiBusinessBusinessIdAppointmentsAvailabilityParams,
  UpdateAppointmentCommand,
} from ".././model";

import { customInstance } from "../../axios-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAppointments = () => {
  const getApiBusinessBusinessIdAppointmentsAvailability = (
    businessId: number,
    params?: GetApiBusinessBusinessIdAppointmentsAvailabilityParams,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<AvailabilitySlotDto[]>(
      {
        url: `/api/business/${businessId}/appointments/availability`,
        method: "GET",
        params,
      },
      options,
    );
  };
  const getApiBusinessBusinessIdAppointments = (
    businessId: number,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      { url: `/api/business/${businessId}/appointments`, method: "GET" },
      options,
    );
  };
  const postApiBusinessBusinessIdAppointments = (
    businessId: number,
    createAppointmentCommand: CreateAppointmentCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/business/${businessId}/appointments`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createAppointmentCommand,
      },
      options,
    );
  };
  const putApiBusinessBusinessIdAppointmentsAppointmentId = (
    businessId: number,
    appointmentId: number,
    updateAppointmentCommand: UpdateAppointmentCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/business/${businessId}/appointments/${appointmentId}`,
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        data: updateAppointmentCommand,
      },
      options,
    );
  };
  const deleteApiBusinessBusinessIdAppointmentsAppointmentId = (
    businessId: number,
    appointmentId: number,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/business/${businessId}/appointments/${appointmentId}`,
        method: "DELETE",
      },
      options,
    );
  };
  return {
    getApiBusinessBusinessIdAppointmentsAvailability,
    getApiBusinessBusinessIdAppointments,
    postApiBusinessBusinessIdAppointments,
    putApiBusinessBusinessIdAppointmentsAppointmentId,
    deleteApiBusinessBusinessIdAppointmentsAppointmentId,
  };
};
export type GetApiBusinessBusinessIdAppointmentsAvailabilityResult =
  NonNullable<
    Awaited<
      ReturnType<
        ReturnType<
          typeof getAppointments
        >["getApiBusinessBusinessIdAppointmentsAvailability"]
      >
    >
  >;
export type GetApiBusinessBusinessIdAppointmentsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getAppointments>["getApiBusinessBusinessIdAppointments"]
    >
  >
>;
export type PostApiBusinessBusinessIdAppointmentsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<
        typeof getAppointments
      >["postApiBusinessBusinessIdAppointments"]
    >
  >
>;
export type PutApiBusinessBusinessIdAppointmentsAppointmentIdResult =
  NonNullable<
    Awaited<
      ReturnType<
        ReturnType<
          typeof getAppointments
        >["putApiBusinessBusinessIdAppointmentsAppointmentId"]
      >
    >
  >;
export type DeleteApiBusinessBusinessIdAppointmentsAppointmentIdResult =
  NonNullable<
    Awaited<
      ReturnType<
        ReturnType<
          typeof getAppointments
        >["deleteApiBusinessBusinessIdAppointmentsAppointmentId"]
      >
    >
  >;
