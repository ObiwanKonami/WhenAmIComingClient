/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * WAIC API
 * WAIC API endpoints
 * OpenAPI spec version: v1
 */
import type {
  AssignPermissionToRoleCommand,
  AssignUserToRoleCommand,
  CreateRoleCommand,
  RemovePermissionFromRoleCommand,
  RemoveUserFromRoleCommand,
  UpdateRoleCommand,
} from ".././model";

import { customInstance } from "../../axios-instance";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getRoles = () => {
  const getApiRoles = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<null>({ url: `/api/Roles`, method: "GET" }, options);
  };
  const postApiRoles = (
    createRoleCommand: CreateRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: createRoleCommand,
      },
      options,
    );
  };
  const putApiRolesRoleId = (
    roleId: number,
    updateRoleCommand: UpdateRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles/${roleId}`,
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        data: updateRoleCommand,
      },
      options,
    );
  };
  const deleteApiRolesRoleId = (
    roleId: number,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      { url: `/api/Roles/${roleId}`, method: "DELETE" },
      options,
    );
  };
  const getApiRolesPermissions = (
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      { url: `/api/Roles/permissions`, method: "GET" },
      options,
    );
  };
  const postApiRolesAssignUser = (
    assignUserToRoleCommand: AssignUserToRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles/assign-user`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: assignUserToRoleCommand,
      },
      options,
    );
  };
  const postApiRolesRemoveUser = (
    removeUserFromRoleCommand: RemoveUserFromRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles/remove-user`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: removeUserFromRoleCommand,
      },
      options,
    );
  };
  const postApiRolesAssignPermission = (
    assignPermissionToRoleCommand: AssignPermissionToRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles/assign-permission`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: assignPermissionToRoleCommand,
      },
      options,
    );
  };
  const postApiRolesRemovePermission = (
    removePermissionFromRoleCommand: RemovePermissionFromRoleCommand,
    options?: SecondParameter<typeof customInstance>,
  ) => {
    return customInstance<null>(
      {
        url: `/api/Roles/remove-permission`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: removePermissionFromRoleCommand,
      },
      options,
    );
  };
  return {
    getApiRoles,
    postApiRoles,
    putApiRolesRoleId,
    deleteApiRolesRoleId,
    getApiRolesPermissions,
    postApiRolesAssignUser,
    postApiRolesRemoveUser,
    postApiRolesAssignPermission,
    postApiRolesRemovePermission,
  };
};
export type GetApiRolesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["getApiRoles"]>>
>;
export type PostApiRolesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["postApiRoles"]>>
>;
export type PutApiRolesRoleIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["putApiRolesRoleId"]>>
>;
export type DeleteApiRolesRoleIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["deleteApiRolesRoleId"]>>
>;
export type GetApiRolesPermissionsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["getApiRolesPermissions"]>>
>;
export type PostApiRolesAssignUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["postApiRolesAssignUser"]>>
>;
export type PostApiRolesRemoveUserResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getRoles>["postApiRolesRemoveUser"]>>
>;
export type PostApiRolesAssignPermissionResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getRoles>["postApiRolesAssignPermission"]>
  >
>;
export type PostApiRolesRemovePermissionResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getRoles>["postApiRolesRemovePermission"]>
  >
>;
